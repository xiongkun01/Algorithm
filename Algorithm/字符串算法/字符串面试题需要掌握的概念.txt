字符串面试题的特点
一、需要掌握的概念如下：
1、回文
所谓回文字符串，就是一个字符串，从左到右读和从右到左读是完全一样的。比如"level" 、 “aaabbaaa”

2、子串（连续）

3、子序列（不连续）

4、前缀树（Trie树）
Trie树，又称字典树、前缀树，是一种树形结构，是哈希树的变种，是一种用于快速检索的多叉树结构。 
典型应用是用于统计和排序大量的字符串（但不仅限于字符串），所以经常被搜索引擎系统用于文本词频统计。
它的优点是：最大限度地减少无谓的字符串比较，查询效率比哈希表高。 
Trie的核心思想是空间换时间。利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。 
Trie树也有它的缺点,Trie树的内存消耗非常大。
Trie树有3个基本性质：
 - 根节点不包含字符，除根节点外每一个节点都只包含一个字符
 - 从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串
 - 每个节点的所有子节点包含的字符都不相同

5、后缀树和后缀数组
后缀树，就是把一串字符的所有后缀保存并且压缩的字典树。相对于字典树来说，后缀树并不是针对大量字符串的，
而是针对一个或几个字符串来解决问题，比如字符串的回文子串，两个字符串的最长公共子串等等。 
性质：一个字符串构造了一棵树，树中保存了该字符串所有的后缀。

6、匹配

7、字典序
字符串根据字典值排序问题，就是指对给定的字符串，按照首字母的字典值排序，如果首字母相同的字符串，
则按照第二个字母，依次内推，比如说
{"dog","dear","eye"，"bed"}，排序后应该是{"bed","dear","dog","eye"}

二、需要掌握的操作
1、与数组有关的操作：增删改查

2、字符的替换

3、字符串的旋转

三、字符串题目的常见类型
1、规则判断
1.1 判断字符串是否符合整数规则

1.2 判断字符串是否符合浮点数规则

1.3 判断字符串是否符合回文字符串规则


2、数字运算
int和long类型表达整数范围有限，所以经常用字符串实现大整数。
与大整数相关的加减乘除操作，需要模拟笔算的过程。


3、与数组操作有关的类型
3.1 数组有关的调整、排序等操作需要掌握

3.2 快速排序的划分过程需要掌握和改写


4、字符计数
4.1 哈希表

4.2 固定长度的数组

4.3 滑动窗口问题、寻找无重复字符子串问题、计算变位词问题


5、动态规划类型
5.1 最长公共子串

5.2 最长公共子序列

5.3 最长回文子串

5.4 最长回文子序列


6、搜索类型
6.1 宽度优先搜索

6.2 深度优先搜索


7、高级算法与数据结构解决的问题
7.1 Manacher算法解决最长回文子串问题

7.2 KMP算法解决字符串匹配问题

7.3 前缀树结构

7.4 后缀树和后缀数组

7.5 BFPRT算法求解top-k问题

7.6 通常面试中很少出现





