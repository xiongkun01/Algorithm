计算机操作系统常问题目
1、多进程和多线程的区别？（总共六个方面）
****数据共享、同步*****：
多进程的数据共享复杂，需要使用IPC通讯，数据是分开的，同步简单；
多线程共享进程数据，但是同步复杂；
****内存、cpu****:
多进程占用内存较多，切换复杂，CPU利用率低；
多线程占用内存较少，切换简单，CPU利用率高；
****创建销毁、切换****：
多进程的创建销毁、切换复杂，速度慢；
多线程的创建销毁、切换简单，速度快；
****编程、调试****：
多进程的编程简单，调试简单；
多线程的编程复杂，调试复杂；
****可靠性****：
进程间不会相互影响；
一个线程挂掉可能会导致整个进程挂掉；
****分布式****：
多进程适应于多核、多机分布式；扩展简单；
多线程适用于多核分布式；

2、多线程的优点？
2.1、提高应用程序响应。这对图形界面的程序尤其有意义，当一个操作耗时很长时，整个系统都会等待这个操作，
此时程序不会响应键盘、鼠标、菜单的操作，而使用多线程技术，将耗时长的操作（time consuming）置于一个新的线程，
可以避免这种尴尬的情况。
2.2、使多CPU系统更加有效。操作系统会保证当线程数不大于CPU数目时，不同的线程运行于不同的CPU上。
改善程序结构。一个既长又复杂的进程可以考虑分为多个线程，成为几个独立或半独立的运行部分，
这样的程序会利于理解和修改。

在Unix上编程采用多线程还是多进程的争执由来已久，这种争执最常见到在B/S通讯中服务端并发技术的选型上，
比如WEB服务器技术中，Apache是采用多进程的（perfork模式，每个客户连接对应一个进程，
每进程中只存在唯一一个执行线程），Java的Web容器Tomcat、Websphere等都是多线程的（每个客户连接对应一个线程，
所有线程都在一个进程中）。

3、增加并发数量的实验
实验中的计算机CPU是32位，寻址最大范围是4GB（2的32次方），Linux是按照3GB/1GB的方式来分配内存，
其中1GB属于所有进程共享的内核空间，3GB属于用户空间（进程虚拟内存空间）。Linux2.6的默认
线程栈大小是8M（通过ulimit -a查看），对于多线程，在创建线程的时候系统会为每一个线程预分
配线程栈地址空间，也就是8M的虚拟内存空间。线程数量太多时，线程栈累计的大小将超过进程虚拟
内存空间大小（计算时需要排除程序文本、数据、共享库等占用的空间），这就是实验中出现的“段错误”的原因。